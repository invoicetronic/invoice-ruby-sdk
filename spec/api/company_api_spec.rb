=begin
#Italian eInvoice API

#The Italian eInvoice API is a RESTful API that allows you to send and receive invoices through the Italian [Servizio di Interscambio (SDI)][1], or Interchange Service. The API is designed by Invoicetronic to be simple and easy to use, abstracting away SDI complexity while still providing complete control over the invoice send/receive process. The API also provides advanced features and a rich toolchain, such as invoice validation, multiple upload methods, webhooks, event logs, CORS support, client SDKs for commonly used languages, and CLI tools.  For more information, see  [Invoicetronic website][2]  [1]: https://www.fatturapa.gov.it/it/sistemainterscambio/cose-il-sdi/ [2]: https://invoicetronic.com/

The version of the OpenAPI document: 1.0.0
Contact: support@invoicetronic.com
Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Invoice_Sdk::CompanyApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CompanyApi' do
  before do
    # run before each test
    @api_instance = Invoice_Sdk::CompanyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CompanyApi' do
    it 'should create an instance of CompanyApi' do
      expect(@api_instance).to be_instance_of(Invoice_Sdk::CompanyApi)
    end
  end

  # unit tests for invoice_v1_company_get
  # List companies
  # Companies are the entities that send and receive invoices. At least one company is required in order to send and receive invoices.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number.
  # @option opts [Integer] :page_size Items per page.
  # @return [Array<Company>]
  describe 'invoice_v1_company_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for invoice_v1_company_id_delete
  # Delete a company
  # Companies are the entities that send and receive invoices. At least one company is required in order to send and receive invoices.
  # @param id Item id.
  # @param [Hash] opts the optional parameters
  # @return [Company]
  describe 'invoice_v1_company_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for invoice_v1_company_id_get
  # Get a company by id
  # Companies are the entities that send and receive invoices. At least one company is required in order to send and receive invoices.
  # @param id Item id.
  # @param [Hash] opts the optional parameters
  # @return [Company]
  describe 'invoice_v1_company_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for invoice_v1_company_post
  # Add a company
  # Companies are the entities that send and receive invoices. At least one company is required in order to send and receive invoices.
  # @param company 
  # @param [Hash] opts the optional parameters
  # @return [Company]
  describe 'invoice_v1_company_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for invoice_v1_company_put
  # Update a company
  # Companies are the entities that send and receive invoices. At least one company is required in order to send and receive invoices.
  # @param company 
  # @param [Hash] opts the optional parameters
  # @return [Company]
  describe 'invoice_v1_company_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
